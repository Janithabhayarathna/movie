openapi: 3.0.0
servers:

  - description: Movie App
    url: http://localhost:5000/
info:
  description: This is a simple movie API
  version: "1.0.0"
  title: Simple movie API
  contact:
    email: abhayaratnajanith3@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /api/movie/list:
    get:
      tags:
        - movie
      summary: Get the list of movies
      operationId: view.get
      description: |
        Get the movies list

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movieItem'
        '400':
          description: bad input parameter

  /api/movie/create:
    post:
      tags:
        - movie
      summary: adds a movie
      operationId: view.post
      description: Adds a movie to the system
      responses:
        '201':
          description: movie created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing movie already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movieItem'
        description: movie to add

  /api/movie/retrieve/{movie_id}:
    get:
      tags:
        - movie
      summary: Get a movie by movie id
      operationId: view.get_one
      description: |
        Search for a movie
      parameters:
        - name: movie_id
          in: path
          description: movie ID
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movieItem'
        '400':
          description: bad input parameter

#  /api/movie/update/{movie_id}:
#    put:
#      operationId: view.update
#      tags:
#        - movie
#      summary: Update a movie in the movie list
#      description: Update a movie in the movie list
#      parameters:
#        - name: movie_id
#          in: path
#          type: integer
#          required: true
#        - name: movie
#          in: body
#          schema:
#            type: object
#            properties:
#              movie_name:
#                type: string
#                description: Name of the movie
#              released_year:
#                type: string
#                description: Movie released year
#              movie_type:
#                type: string
#                description: Movie type
#      responses:
#        200:
#          description: Successfully updated the movie in movie list

  /api/movie/update/{movie_id}:
    put:
      operationId: view.update
      tags:
        - movie
      summary: Update a movie in the movie list
      description: Update a movie in the movie list
      parameters:
        - name: movie_id
          in: path
          required: true
          description: The id of the movie to update.
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movieItem'
        description: movie to add
      responses:
        "200":
          description: Successfully updated the movie in movie list

  /api/movie/delete/{movie_id}:
    delete:
      operationId: view.delete
      tags:
        - movie
      summary: Delete a movie in the movie list
      description: Delete a movie in the movie list
      parameters:
        - name: movie_id
          in: path
          description: movie ID
          required: true
          schema:
            type: integer
            format: int64

      responses:
        200:
          description: Successfully updated a movie in movie list

components:
  schemas:
    movieItem:
      type: object

      properties:
        movie_name:
          type: string
        released_year:
          type: string
        movie_type:
          type: string