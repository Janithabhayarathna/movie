openapi: 3.0.0
servers:

  - description: Movie App
    url: http://localhost:5000/
info:
  description: This is a simple movie/theater API
  version: "1.0.0"
  title: Simple movie API
  contact:
    email: abhayaratnajanith3@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /api/movies:
    get:
      tags:
        - movies
      summary: Get the list of movies
      operationId: view.get_movie_list
      description: |
        Get the movies list

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movieItem'
        '400':
          description: bad input parameter


    post:
      tags:
        - movies
      summary: adds a movie
      operationId: view.post_movie
      description: Adds a movie to the system
      responses:
        '201':
          description: movie created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing movie already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movieItem'
        description: movie to add

  /api/movies/{movie_id}:
    get:
      tags:
        - movies
      summary: Get a movie by movie id
      operationId: view.get_one_movie
      description: |
        Search for a movie
      parameters:
        - name: movie_id
          in: path
          description: movie ID
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/movieItem'
        '400':
          description: bad input parameter


    put:
      operationId: view.update_movie
      tags:
        - movies
      summary: Update a movie in the movie list
      description: Update a movie in the movie list
      parameters:
        - name: movie_id
          in: path
          required: true
          description: The id of the movie to update.
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/movieItem'
        description: movie to update
      responses:
        "200":
          description: Successfully updated the movie in movie list

    delete:
      operationId: view.delete_movie
      tags:
        - movies
      summary: Delete a movie in the movie list
      description: Delete a movie in the movie list
      parameters:
        - name: movie_id
          in: path
          description: movie ID
          required: true
          schema:
            type: integer
            format: int64

      responses:
        200:
          description: Successfully deleted a movie in the movie list

  /api/theaters:
    get:
      tags:
        - theaters
      summary: Get the list of theaters
      operationId: view.get_theater_list
      description: |
        Get the theaters list

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/theatersItem'
        '400':
          description: bad input parameter

    post:
      tags:
        - theaters
      summary: adds a theater
      operationId: view.post_theater
      description: Adds a theater to the system
      responses:
        '201':
          description: theater created
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: an existing theater already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/theatersItem'
        description: theater to add

  /api/theaters/{theater_id}:
    get:
      tags:
        - theaters
      summary: Get a theater by theater id
      operationId: view.get_one_theater
      description: |
        Search for a theater
      parameters:
        - name: theater_id
          in: path
          description: theater ID
          required: true
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/theatersItem'
        '400':
          description: bad input parameter

    put:
      operationId: view.update_theater
      tags:
        - theaters
      summary: Update a theater in the theaters list
      description: Update a theater in the theaters list
      parameters:
        - name: theater_id
          in: path
          required: true
          description: The id of the theater to update.
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/theatersItem'
        description: movie to update
      responses:
        "200":
          description: Successfully updated the theater in the theater list

    delete:
      operationId: view.delete_theater
      tags:
        - theaters
      summary: Delete a theater in the theater list
      description: Delete a theater in the theater list
      parameters:
        - name: theater_id
          in: path
          description: theater ID
          required: true
          schema:
            type: integer
            format: int64

      responses:
        200:
          description: Successfully deleted a theater in the theater list


components:
  schemas:
    movieItem:
      type: object

      properties:
        movie_name:
          type: string
        released_year:
          type: string
        movie_type:
          type: string

    theatersItem:
      type: object

      properties:
        theater_name:
          type: string
        theater_address:
          type: string
        theater_type:
          type: string